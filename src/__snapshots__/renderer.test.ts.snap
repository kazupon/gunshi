// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`renderUsage > basic 1`] = `
"A test command

USAGE:
  cmd1 test <OPTIONS>

OPTIONS:
  -f, --foo <foo>          The foo option
  --bar                    The bar option
  -b, --baz [baz]          The baz option (default: 42)
  -q, --qux <qux>          The qux option

EXAMPLES:
  # Example 1
  $ test --foo bar --bar --baz 42 --qux quux
  # Example 2
  $ test -f bar -b 42 -q quux
"
`;

exports[`renderUsage > enable usageOptionType 1`] = `
"A test command

USAGE:
    cmd1 test <OPTIONS>

OPTIONS:
    -f, --foo <foo>            [string]  The foo option
    --bar                      [boolean] The bar option
    -b, --baz [baz]            [number]  The baz option (default: 42)
    -q, --qux <qux>            [string]  The qux option

EXAMPLES:
    # Example 1
    $ test --foo bar --bar --baz 42 --qux quux
    # Example 2
    $ test -f bar -b 42 -q quux
"
`;

exports[`renderUsage > kebab-case arguments with Command.toKebab option 1`] = `
"A test command with kebab-case arguments

USAGE:
  cmd1 test <OPTIONS>

OPTIONS:
  -f, --foo-bar <foo-bar>                                  The fooBar option
  --baz-qux                                                The bazQux option
  -c, --camel-case [camel-case]                            The camelCase option (default: 42)
  -k, --kebab-case-required <kebab-case-required>          The kebabCaseRequired option

EXAMPLES:
  # Example with kebab-case
  $ test --foo-bar value --baz-qux --camel-case 42 --kebab-case-required value
  # Example with negated option
  $ test --no-baz-qux --foo-bar value --kebab-case-required value
"
`;

exports[`renderUsage > kebab-case arguments with toKebab option 1`] = `
"A test command with kebab-case arguments

USAGE:
  cmd1 test <OPTIONS>

OPTIONS:
  -f, --foo-bar <foo-bar>                                  The fooBar option
  --baz-qux                                                The bazQux option
  --no-baz-qux                                             Negatable of --baz-qux
  -c, --camel-case [camel-case]                            The camelCase option (default: 42)
  -k, --kebab-case-required <kebab-case-required>          The kebabCaseRequired option

EXAMPLES:
  # Example with kebab-case
  $ test --foo-bar value --baz-qux --camel-case 42 --kebab-case-required value
  # Example with negated option
  $ test --no-baz-qux --foo-bar value --kebab-case-required value
"
`;

exports[`renderUsage > mixed positionals and optionals 1`] = `
"A test command

USAGE:
  cmd1 test <OPTIONS> <foo> <baz>

ARGUMENTS:
  foo           The foo argument
  baz           The bar argument

OPTIONS:
  -b, --bar <bar>          The bar option
  --qux <qux>              The qux option (choices: a | b | c)
"
`;

exports[`renderUsage > no arguments 1`] = `
"A test command

USAGE:
  cmd1 test 

EXAMPLES:
  # Example 1
  $test
  # Example 2
  $ test
"
`;

exports[`renderUsage > no examples 1`] = `
"A test command

USAGE:
  cmd1 test <OPTIONS>

OPTIONS:
  -f, --foo <foo>          The foo option
  --bar                    The bar option
  -b, --baz [baz]          The baz option (default: 42)
  -q, --qux <qux>          The qux option
"
`;

exports[`renderUsage > no required on optional arguments 1`] = `
"A test command

USAGE:
  cmd1 test <OPTIONS>

OPTIONS:
  -f, --foo <foo>          The foo option
  --bar                    The bar option
  -b, --baz [baz]          The baz option (default: 42)
"
`;

exports[`renderUsage > positional arguments 1`] = `
"A test command

USAGE:
  cmd1 test <foo> <bar>

ARGUMENTS:
  foo           The foo argument
  bar           The bar argument
"
`;

exports[`renderUsage > sub commands 1`] = `
"USAGE:
  cmd1 [show] <OPTIONS> <positional1>
  cmd1 <COMMANDS>

COMMANDS:
  show              A show command  
  command1          this is command1  
  command2            

For more info, run any command with the \`--help\` flag:
  cmd1 show --help
  cmd1 command1 --help
  cmd1 command2 --help

ARGUMENTS:
  positional1           The positional argument 1

OPTIONS:
  -f, --foo <foo>          The foo option
  --bar                    The bar option
  -b, --baz [baz]          The baz option (default: 42)
  -q, --qux <qux>          The qux option
  -l, --log [log]          The log option (default: info, choices: debug | info | warn | error)

EXAMPLES:
  # Example 1
  $ test --foo bar --bar --baz 42 --qux quux
  # Example 2
  $ test -f bar -b 42 -q quux
"
`;

exports[`renderValidationErrors 1`] = `
"Optional argument '--dependency' or '-d' is required
Optional argument '--alias' or '-a' is required"
`;
